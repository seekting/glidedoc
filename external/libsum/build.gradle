apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
        versionCode Integer.parseInt(VERSION_CODE)
        versionName VERSION_NAME
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main() {
            jniLibs.srcDirs = ['libs']
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

def output = 'build/outputs/aar'
def outputJarName = 'liba'
apply plugin: 'maven-publish'

publishing {
    repositories {
        maven {
            url 'http://10.9.174.252:8088/artifactory/magic-repo/'
            credentials {
                username 'xiongjialin'
                password '123456'
            }
        }
    }

    publications {
        def type = 'release'
        mavenRelease(MavenPublication) {
            println 'publications type is ' + type
            groupId "com.mobimagic.weather"
            artifactId "liba"
            version "${VERSION_NAME}.${VERSION_CODE}"
            artifact source: file(output + "/" + outputJarName + "-" + type + ".aar"), classifier: type, extension: "aar"
//            artifact source: file(output + "/" + outputJarName + "-" + type + ".mapping"), classifier: type, extension: "mapping"
        }
        type = 'debug'
        mavenDebug(MavenPublication) {
            groupId "com.mobimagic.weather"
            artifactId "liba"
            version "${VERSION_NAME}.${VERSION_CODE}"
            artifact source: file(output + "/" + outputJarName + "-" + type + ".aar"), classifier: type, extension: "aar"
//            artifact source: file(output + "/" + outputJarName + "-" + type + ".mapping"), classifier: type, extension: "mapping"
        }
    }
}