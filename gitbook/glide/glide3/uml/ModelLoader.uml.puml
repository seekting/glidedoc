@startuml
'
'abstract class AbstractList
'abstract AbstractCollection
'interface List
'interface Collection
'
'List <|-- AbstractList
'Collection <|-- AbstractCollection
'
'Collection <|- List
'AbstractCollection <|- AbstractList
'AbstractList <|-- ArrayList
'
'class ArrayList {
'Object[] elementData
'size()
'}
'
'enum TimeUnit {
'DAYS
'HOURS
'MINUTES
'}

interface ModelLoader{
DataFetcher getResourceFetcher(T model, int width, int height)
}
class StringLoader{
}
interface ModelLoaderFactory{
ModelLoader build(Context context ,GenericLoaderFactory factories)
void teardown();
}
class GenericLoaderFactory{
ModelLoader buildModelLoader(Class<T> modelClass, Class<Y> resourceClass)
}
ModelLoaderFactory..>GenericLoaderFactory
ModelLoaderFactory..>ModelLoader
StringLoader--|> ModelLoader
StreamStringLoader--|>StringLoader

FileLoader--|>ModelLoader
StreamFileLoader--|>FileLoader
FileDescriptorFileLoader--|>FileLoader
UriLoader--|>ModelLoader
StreamUriLoader--|>UriLoader

HttpUrlGlideUrlLoader --|>ModelLoader
@enduml